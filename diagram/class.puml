@startuml
!theme vibrant
'skinparam style strictuml
mainframe Class

package match.pattern {
    class MatcherGroup {
        global: List<ContentMatcher>
        globalGroup: List<ContentMatcher>
        globalPrivate: List<ContentMatcher>
        custom: List<ContentMatcher>
    }

    class ContentMatcher {
        stepId: Long
        messageTemplate: String
        type: MatcherType
        matcherFunction: Function2<String, String, Boolean>
        ---
        isMatched(string: String)
    }

    MatcherGroup "1" o-- "n" ContentMatcher

    enum MatcherType {
        REGEX
        EQUALS
        CONTAINS
        ENDS_WITH
        STARTS_WITH
    }

    ContentMatcher o- MatcherType
}

interface Executable {
    execute(context: CommandExecuteContext)
}

class CommandExecuteContext {
    message: EventMessage
    sender: SpecificSender
    matchedTime: TimeStamp
    tempVars: Map<String, Object>
}

Executable ..> CommandExecuteContext

class SpecificSender {
    chat: ChatInfo
    qid: Long
}

CommandExecuteContext "1" o-- "1" SpecificSender

class ChatInfo {
    type: ChatType
    chatId: Long
}

SpecificSender --> ChatInfo
ChatInfo o- ChatType

enum ChatType {
    Private
    Group
}

@enduml
