@startuml
!theme vibrant
skinparam style strictuml
mainframe Message processing

actor "User\n(QQ Member)"       as user
boundary "Go-Mirai\nProxy"      as proxy
control "QMessageListener"      as listener
control "SSDLRuleRunner"        as ruleRunner
control "BehaviorRouter"        as bRouter
participant "Behavior A"        as exb
participant "Command A"         as cmd
participant "HttpAPI Client"    as api
database "Database"             as db

'Receive Message
user++
user -> proxy ++: 1: send message

'Async message push
proxy -> listener++ : 1.1: proxy message
listener --> proxy : 1.2: accepted


'Record message
listener -> db++ : 2: record message
listener <-- db-- : 2.1: return

'Message match and process
'Pre processing
listener -> listener : 3: pre-handle event message
note right of listener : Omit the logic of pre-handler
listener -> ruleRunner++ : 4: process event message

'Extra behavior
ruleRunner -> bRouter++ : 4.1: find extra behavior pattern
alt Find extra behavior pattern in use
        bRouter -> exb++ : 4.1.1: forward message to extra behavior
        exb -> exb: 4.1.2: process extra behavior
        note right of exb : Omit the logic of behavior
        bRouter <-- exb-- : 4.1.3: return
    ruleRunner <-- bRouter : 4.2: return
else No extra behavior pattern in use
    ruleRunner <-- bRouter : 4.2: no pattern found
end
bRouter--

'Run rule
ruleRunner -> ruleRunner : 4.3: find matched matcher
ruleRunner -> cmd++ : 4.4: run SSDL rule
    cmd -> api++ : 4.4.1: send message in rule logic
        api -> proxy++ : 4.4.1.1: push message
            proxy --> user : 4.4.1.1.1: message pushed
        proxy --> api-- : 4.4.1.2: success
    api --> cmd-- : 4.4.2: return
cmd --> ruleRunner-- : 4.5: return
ruleRunner --> listener-- : 4.6: return

'Post processing
listener -> listener : 5: post-handle event message
note right of listener : Omit the logic of post-handler
listener -> listener : 6: record log
@enduml
